syntax = "proto3";

package goods.v1;

import "validate/validate.proto";

option go_package = "goods/api/goods/v1;v1";

service Goods {
    rpc CreateCategory (CategoryInfoRequest) returns (CategoryInfoResponse);

    // 商品类型基本信息创建
    rpc CreateGoodsType (GoodsTypeRequest) returns (GoodsTypeResponse);

    // 商品规格或属性的信息
    rpc CreateGoodsSpecification (SpecificationRequest) returns (SpecificationResponse);


    // 商品参数属性分组名
    rpc CreateAttrGroup(AttrGroupRequest) returns(AttrGroupResponse);
    // 商品参数属性名和值
    rpc CreateAttrValue(AttrRequest) returns(AttrResponse);


    rpc CreateGoods(CreateGoodsRequest) returns (CreateGoodsResponse);

    rpc GoodsList(GoodsFilterRequest) returns(GoodsListResponse);
}

message CategoryInfoRequest {
    int32 id = 1;
    string name = 2;
    int32 parentCategory = 3;
    int32 level = 4;
    bool isTab = 5;
    int32 sort = 6;
}

message CategoryInfoResponse {
    int32 id = 1;
    string name = 2;
    int32 parentCategory = 3;
    int32 level = 4;
    bool isTab = 5;
    int32 sort = 6;
}

message GoodsTypeRequest {
    int64 id = 1;
    string name = 2 [(validate.rules).string.min_len = 3];;
    string typeCode = 3 [(validate.rules).string.min_len = 3];;
    string nameAlias = 4;
    bool isVirtual = 5;
    string desc = 6;
    int32 sort = 7;
}

message GoodsTypeResponse {
    int64 id = 1;
}

message SpecificationValue {
    int64 id = 1;
    int64 attrId = 2;
    string value = 3 [(validate.rules).string.min_len = 3];
    int32 sort = 4 [(validate.rules).int32.gte = 3];
}

message SpecificationRequest {
    int64 id = 1;
    int64 typeId = 2 [(validate.rules).int64.gte = 1];
    string name = 3 [(validate.rules).string.min_len = 2];
    int32 sort = 4 [(validate.rules).int32.gte = 1];
    bool status = 5;
    bool isSku = 6;
    bool isSelect = 7;
    repeated SpecificationValue specificationValue = 8;
}

message SpecificationResponse {
    int64 id = 1;
}


message AttrGroupRequest {
    int64 id = 1;
    int64 typeId = 2 [(validate.rules).int64.gte = 1];
    string title = 3 [(validate.rules).string.min_len = 3];
    string  desc = 4;
    bool status = 5;
    int32 sort = 6 [(validate.rules).int32.gte = 1];
}

message AttrGroupResponse {
    int64 id = 1;
    int64 typeId = 2;
    string title = 3;
    string  desc = 4;
    bool status = 5;
    int32 sort = 6;
}


message AttrValueRequest {
    int64 id = 1;
    int64 attrId = 2;
    int64 groupId = 3 [(validate.rules).int64.gte = 1];
    string value = 4 [(validate.rules).string.min_len = 3];
}

message AttrRequest {
    int64 id = 1;
    int64 typeId = 2 [(validate.rules).int64.gte = 1];
    int64 groupId = 3 [(validate.rules).int64.gte = 1];
    string title = 4 [(validate.rules).string = {min_len: 1}];
    string  desc = 5;
    bool status = 6;
    int32 sort = 7 [(validate.rules).int32.gte = 1];
    repeated AttrValueRequest attrValue = 8;
}

message AttrValueResponse {
    int64 id = 1;
    int64 attrId = 2;
    int64 groupId = 3;
    string value = 4;
}

message AttrResponse {
    int64 id = 1;
    int64 typeId = 2;
    int64 groupId = 3;
    string title = 4;
    string  desc = 5;
    bool status = 6;
    int32 sort = 7;
    repeated AttrValueResponse attrValue = 8;
}


message CreateGoodsRequest {
    int64 id = 1;
    int32 categoryId = 2 [(validate.rules).int32.gte = 1];
    int32 brandId = 3 [(validate.rules).int32.gte = 1];
    int64 typeId = 4 [(validate.rules).int64.gte = 1];
    string name = 5 [(validate.rules).string.min_len = 1];
    string nameAlias = 6;
    string goodsTags = 7;
    string goodsSn = 8 [(validate.rules).string.min_len = 1];
    int64 shopPrice = 9;
    int64 marketPrice = 10;
    int64 inventory = 11;
    string goodsBrief = 12;
    string goodsFrontImage = 13;
    repeated string goodsImages = 14;
    bool shipFree = 15;
    int32 shipId = 16;
    bool isNew = 17;
    bool isHot = 18;
    bool onSale = 19;
    // 根据商品类型 选择商品规格和商品属性信息
    message goodsSku {
        int64 id = 1;
        int64 goodsId = 2;
        string skuName = 3 [(validate.rules).string.min_len = 1];
        string code = 4 [(validate.rules).string.min_len = 1];
        string barCode = 5 [(validate.rules).string.min_len = 1];
        int64 price = 6;
        int64 promotionPrice = 7;
        int64 points = 8;
        string image = 9;
        int32 sort = 10;
        int64 inventory = 11;
        // 商品规格
        message specification {
            int64 sId = 1 [(validate.rules).int64.gte = 1];
            int64 vId = 2 [(validate.rules).int64.gte = 1];
        }
        repeated specification specificationInfo = 12;
        // 商品属性组
        message groupAttr {
            int64 groupId = 1 [(validate.rules).int64.gte = 1];
            string groupName = 2 [(validate.rules).string.min_len = 1];
            message attr {
                int64 attrId = 1 [(validate.rules).int64.gte = 1];
                string attrName = 2 [(validate.rules).string.min_len = 1];
                int64 attrValueId = 3 [(validate.rules).int64.gte = 1];
                string attrValueName = 4 [(validate.rules).string.min_len = 1];
            }
            repeated attr attrInfo = 3;
        }
        repeated groupAttr groupAttrInfo = 13;
    }
    repeated goodsSku sku = 20;
}


message CreateGoodsResponse {
    int64 ID = 1;
}


// 根据前期设计的 mapping 结构，来构建查询的时候所需的字段
// 当然不是说 mapping 中没有的就不能进行查询了
message GoodsFilterRequest  {
    string keywords = 1;
    int32 categoryId = 2;
    int32 brandId = 3;
    int64 minPrice = 4;
    int64 maxPrice = 5;
    bool  isHot = 6;
    bool  isNew = 7;
    bool  isTab = 8;
    int64 clickNum = 9;
    int64 soldNum = 10;
    int64 favNum = 11;
    int64 pages = 12;
    int64 pagePerNums = 13;
    int64 id = 14;
}

// 返回的每个商品的具体信息，这里为了演示
// 并没有加入 sku 、brand 等信息，可自行添加
message GoodsInfoResponse {
    int64 id = 1;
    int32 categoryId = 2;
    int32 brandId = 3;
    string name = 4;
    string goodsSn = 5;
    int64 clickNum = 6;
    int64 soldNum = 7;
    int64 favNum = 8;
    int64 marketPrice = 9;
    string goodsBrief = 10;
    string goodsDesc = 11;
    bool shipFree = 12;
    string images = 13;
    repeated string goodsImages = 14;
    bool isNew = 15;
    bool isHot = 16;
    bool onSale = 17;
}

message GoodsListResponse {
    int64 total = 1;
    repeated GoodsInfoResponse list = 2;
}

